name: Petmore Store - Produção

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: production

    steps:

      - name: Checkout repositório
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'

      - name: Check if composer.json exists
        id: check_files
        uses: andstor/file-existence-action@v1
        with:
          files: 'composer.json'

      - name: Configurar autenticação Magento no Composer
        run: |
          composer config -g http-basic.repo.magento.com "${{ secrets.MAGENTO_PUBLIC_KEY }}" "${{ secrets.MAGENTO_PRIVATE_KEY }}"

      - name: Run composer install if composer.json exists
        if: steps.check_files.outputs.files_exists == 'true'
        run: composer validate --no-check-publish && composer install --prefer-dist --no-progress

      - name: Configurar acesso SSH
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SERVER_PRIVATE_SSH_KEY }}

      - name: Testar conexão
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.MAGALU_USER }}@${{ secrets.MAGALU_HOST }} "echo ✅ Conectado com sucesso"

      - name: Criar path da aplicação e dar permissão
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.MAGALU_USER }}@${{ secrets.MAGALU_HOST }} << 'EOF'
          sudo mkdir -p ${{ vars.APP_COMPLETE_PATH }}
          sudo chown -R $USER:$USER ${{ vars.APP_COMPLETE_PATH }}
          EOF

      - name: Copiar arquivos para VM
        run: |
          rsync -avz --delete \
            -e "ssh -o StrictHostKeyChecking=no" \
            ./ \
            ${{ secrets.MAGALU_USER }}@${{ secrets.MAGALU_HOST }}:${{ vars.APP_COMPLETE_PATH }}

      - name: Criar env.php com envsubst
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.MAGALU_USER }}@${{ secrets.MAGALU_HOST }} << 'EOF'
            export REMOTE_STORAGE_DRIVER=${{ secrets.REMOTE_STORAGE_DRIVER }}
            export BACKEND_FRONTNAME=${{ secrets.BACKEND_FRONTNAME }}
            export CACHE_GRAPHQL_ID_SALT=${{ secrets.CACHE_GRAPHQL_ID_SALT }}
            export CACHE_FRONTEND_DEFAULT_ID_PREFIX=${{ secrets.CACHE_FRONTEND_DEFAULT_ID_PREFIX }}
            export CACHE_PAGE_CACHE_ID_PREFIX=${{ secrets.CACHE_PAGE_CACHE_ID_PREFIX }}
            export CONNECTION_DEFAULT_HOST=${{ secrets.CONNECTION_DEFAULT_HOST }}
            export CONNECTION_DEFAULT_PORT=${{ secrets.CONNECTION_DEFAULT_PORT }}
            export CONNECTION_DEFAULT_DB_NAME=${{ secrets.CONNECTION_DEFAULT_DB_NAME }}
            export CONNECTION_DEFAULT_USERNAME=${{ secrets.CONNECTION_DEFAULT_USERNAME }}
            export CONNECTION_DEFAULT_PASSWORD=${{ secrets.CONNECTION_DEFAULT_PASSWORD }}
            envsubst < ${{ vars.APP_COMPLETE_PATH }}/app/etc/env.php.template > ${{ vars.APP_COMPLETE_PATH }}/app/etc/env.php
          EOF

      - name: Executar setup do Magento
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.MAGALU_USER }}@${{ secrets.MAGALU_HOST }} << 'EOF'
            cd ${{ vars.APP_COMPLETE_PATH }}

            chmod 777 -R var/page_cache

            bin/magento module:enable --all
            bin/magento setup:upgrade
            bin/magento setup:di:compile
            bin/magento setup:static-content:deploy -f pt_BR en_US
            bin/magento cache:flush
          EOF

      - name: Corrigir permissões
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.MAGALU_USER }}@${{ secrets.MAGALU_HOST }} << 'EOF'
            cd ${{ vars.APP_COMPLETE_PATH }}
            sudo chown -R www-data:www-data .
            sudo find var generated vendor pub/static pub/media app/etc -type f -exec chmod g+w {} \;
            sudo find var generated vendor pub/static pub/media app/etc -type d -exec chmod g+ws {} \;
          EOF
